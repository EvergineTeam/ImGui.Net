name: Build cimplot Libraries

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            cmake-arch: x64
          - os: ubuntu-latest
            arch: arm64
            cmake-arch: aarch64
          - os: windows-latest
            arch: x86_64
            cmake-arch: x64
          - os: windows-latest
            arch: x86
            cmake-arch: win32
          - os: windows-latest
            arch: arm64
            cmake-arch: arm64
          - os: macos-latest
            arch: x86_64
            cmake-arch: x86_64
          - os: macos-latest
            arch: arm64
            cmake-arch: arm64
    steps:
    - uses: actions/checkout@v4.1.7
      with:
        repository: 'cimgui/cimgui'
        ref: 'master'
        path: 'cimgui'
        submodules: true
        
    - uses: actions/checkout@v4.1.7
      with:
        repository: 'cimgui/cimplot'
        ref: 'master'
        path: 'cimplot'
        submodules: true

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Install Cross-Compilation Tools for ARM64
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Configure cimplot with CMake for ARM64 on Linux
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
      run: cmake -S cimplot -B cimplot/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_PROCESSOR=aarch64 -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DIMGUI_WCHAR32=ON

    - name: Configure cimplot with CMake on Linux (x86_64)
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
      run: cmake -S cimplot -B cimplot/build -DIMGUI_WCHAR32=ON

    - name: Configure cimplot with CMake for macOS
      if: matrix.os == 'macos-latest'
      run: cmake -S cimplot -B cimplot/build -DCMAKE_OSX_ARCHITECTURES=${{ matrix.cmake-arch }} -DIMGUI_WCHAR32=ON

    - name: Configure cimplot with CMake for Windows
      if: matrix.os == 'windows-latest'
      run: cmake -S cimplot -B cimplot/build -A ${{ matrix.cmake-arch }} -DIMGUI_WCHAR32=ON

    - name: Build cimnodes
      run: cmake --build cimplot/build --config Release

    - name: Move Windows binaries
      if: matrix.os == 'windows-latest'
      run: |
        mv cimplot/build/Release/*.dll cimplot/build/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.3.4
      with:
        name: cimplot-${{ matrix.os }}-${{ matrix.arch }}-artifacts 
        path: |
          cimplot/build/*.dll
          cimplot/build/*.so
          cimplot/build/*.dylib
        if-no-files-found: ignore # 'warn' or 'ignore' or 'error'
